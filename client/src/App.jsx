// client/src/App.jsx (Updated - v·ªõi About page m·ªõi)
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { Link } from 'react-router-dom';
import { AuthProvider } from './context/AuthContext';
import { ToastProvider } from './context/ToastContext';
import MainLayout from './layouts/MainLayout';

// Pages
import HomePage from './pages/HomePage';
import LoginPage from './pages/LoginPage';
import RegisterPage from './pages/RegisterPage';
import ForgotPasswordPage from './pages/ForgotPasswordPage';
import ResetPasswordPage from './pages/ResetPasswordPage';
import DashboardPage from './pages/DashboardPage';
import UnauthorizedPage from './pages/UnauthorizedPage';
import CreateStudySetPage from './pages/CreateStudySetPage';
import MySetsPage from './pages/MySetsPage';
import StudySetDetailPage from './pages/StudySetDetailPage';
import StudySessionPage from './pages/StudySessionPage';
import AboutPage from './pages/AboutPage';
import BrowsePage from './pages/BrowsePage';

// Components
import ProtectedRoute from './components/auth/ProtectedRoute';
import ScrollToTop from "./components/common/ScrollToTop";

// Styles
import './App.css';

function App() {
  return (
    <ToastProvider>
      <AuthProvider>
        <Router>
          <div className="App">
            <ScrollToTop />
            <Routes>
              {/* Public routes */}
              <Route path="/" element={
                <MainLayout>
                  <HomePage />
                </MainLayout>
              } />
              
              {/* Auth routes */}
              <Route path="/login" element={<LoginPage />} />
              <Route path="/register" element={<RegisterPage />} />
              <Route path="/forgot-password" element={<ForgotPasswordPage />} />
              <Route path="/reset-password/:token" element={<ResetPasswordPage />} />
              
              {/* Protected routes */}
              <Route path="/dashboard" element={
                <ProtectedRoute>
                  <MainLayout>
                    <DashboardPage />
                  </MainLayout>
                </ProtectedRoute>
              } />
              
              {/* Browse route - Updated to use BrowsePage */}
              <Route path="/browse" element={
                <MainLayout>
                  <BrowsePage />
                </MainLayout>
              } />

              <Route path="/create-set" element={
                <ProtectedRoute>
                  <MainLayout>
                    <CreateStudySetPage />
                  </MainLayout>
                </ProtectedRoute>
              } />

              <Route path="/study/:studySetId" element={
                <ProtectedRoute>
                  <StudySessionPage />
                </ProtectedRoute>
              } />

              <Route path="/study-set/:id" element={
                <ProtectedRoute>
                  <MainLayout>
                    <StudySetDetailPage />
                  </MainLayout>
                </ProtectedRoute>
              } />

              <Route path="/my-sets" element={
                <ProtectedRoute>
                  <MainLayout>
                    <MySetsPage />
                  </MainLayout>
                </ProtectedRoute>
              } />

              <Route path="/profile" element={
                <ProtectedRoute>
                  <MainLayout>
                    <ComingSoonPage 
                      title="H·ªì s∆° c√° nh√¢n" 
                      description="Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n v√† theo d√µi ti·∫øn ƒë·ªô h·ªçc t·∫≠p"
                      icon="üë§"
                    />
                  </MainLayout>
                </ProtectedRoute>
              } />

              <Route path="/settings" element={
                <ProtectedRoute>
                  <MainLayout>
                    <ComingSoonPage 
                      title="C√†i ƒë·∫∑t" 
                      description="T√πy ch·ªânh tr·∫£i nghi·ªám h·ªçc t·∫≠p c·ªßa b·∫°n"
                      icon="‚öôÔ∏è"
                    />
                  </MainLayout>
                </ProtectedRoute>
              } />
              
              {/* Static pages - S·ª≠ d·ª•ng AboutPage m·ªõi */}
              <Route path="/about" element={
                <MainLayout>
                  <AboutPage />
                </MainLayout>
              } />

              <Route path="/terms" element={
                <MainLayout>
                  <TermsPage />
                </MainLayout>
              } />

              <Route path="/privacy" element={
                <MainLayout>
                  <PrivacyPage />
                </MainLayout>
              } />
              
              {/* Error routes */}
              <Route path="/unauthorized" element={<UnauthorizedPage />} />
              
              {/* 404 route */}
              <Route path="*" element={
                <MainLayout>
                  <NotFoundPage />
                </MainLayout>
              } />
            </Routes>
          </div>
        </Router>
      </AuthProvider>
    </ToastProvider>
  );
}

// Coming Soon Page Component
const ComingSoonPage = ({ title, description, icon }) => (
  <div className="coming-soon-page">
    <div className="coming-soon-page__container">
      <div className="coming-soon-page__content">
        <div className="coming-soon-page__icon">{icon}</div>
        <h1 className="coming-soon-page__title">{title}</h1>
        <p className="coming-soon-page__description">{description}</p>
        <div className="coming-soon-page__status">
          <div className="status-indicator status-indicator--pending">
            ƒêang ph√°t tri·ªÉn
          </div>
        </div>
        <div className="coming-soon-page__actions">
          <a href="/" className="btn btn--primary">V·ªÅ trang ch·ªß</a>
          <a href="/dashboard" className="btn btn--outline">Dashboard</a>
        </div>
      </div>
    </div>
  </div>
);

// Terms Page Component
const TermsPage = () => (
  <div className="static-page">
    <div className="static-page__container">
      <div className="static-page__header">
        <h1>ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng</h1>
        <p>C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: {new Date().toLocaleDateString('vi-VN')}</p>
      </div>
      <div className="static-page__content">
        <section>
          <h2>1. Ch·∫•p nh·∫≠n ƒëi·ªÅu kho·∫£n</h2>
          <p>B·∫±ng vi·ªác s·ª≠ d·ª•ng StudyCards, b·∫°n ƒë·ªìng √Ω tu√¢n th·ªß c√°c ƒëi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán n√†y.</p>
        </section>
        <section>
          <h2>2. S·ª≠ d·ª•ng d·ªãch v·ª•</h2>
          <p>B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng StudyCards cho m·ª•c ƒë√≠ch h·ªçc t·∫≠p c√° nh√¢n v√† phi th∆∞∆°ng m·∫°i.</p>
        </section>
        <section>
          <h2>3. Tr√°ch nhi·ªám ng∆∞·ªùi d√πng</h2>
          <ul>
            <li>Kh√¥ng chia s·∫ª n·ªôi dung c√≥ b·∫£n quy·ªÅn</li>
            <li>Kh√¥ng s·ª≠ d·ª•ng cho m·ª•c ƒë√≠ch b·∫•t h·ª£p ph√°p</li>
            <li>T√¥n tr·ªçng c·ªông ƒë·ªìng h·ªçc t·∫≠p</li>
          </ul>
        </section>
      </div>
    </div>
  </div>
);

// Privacy Page Component
const PrivacyPage = () => (
  <div className="static-page">
    <div className="static-page__container">
      <div className="static-page__header">
        <h1>Ch√≠nh s√°ch b·∫£o m·∫≠t</h1>
        <p>C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: {new Date().toLocaleDateString('vi-VN')}</p>
      </div>
      <div className="static-page__content">
        <section>
          <h2>Th√¥ng tin ch√∫ng t√¥i thu th·∫≠p</h2>
          <ul>
            <li>Th√¥ng tin t√†i kho·∫£n (email, t√™n)</li>
            <li>D·ªØ li·ªáu h·ªçc t·∫≠p v√† ti·∫øn ƒë·ªô</li>
            <li>Th√¥ng tin k·ªπ thu·∫≠t c∆° b·∫£n</li>
          </ul>
        </section>
        <section>
          <h2>C√°ch ch√∫ng t√¥i s·ª≠ d·ª•ng th√¥ng tin</h2>
          <ul>
            <li>Cung c·∫•p v√† c·∫£i thi·ªán d·ªãch v·ª•</li>
            <li>C√° nh√¢n h√≥a tr·∫£i nghi·ªám h·ªçc t·∫≠p</li>
            <li>G·ª≠i th√¥ng b√°o quan tr·ªçng</li>
          </ul>
        </section>
        <section>
          <h2>B·∫£o m·∫≠t th√¥ng tin</h2>
          <p>Ch√∫ng t√¥i s·ª≠ d·ª•ng c√°c bi·ªán ph√°p b·∫£o m·∫≠t hi·ªán ƒë·∫°i ƒë·ªÉ b·∫£o v·ªá d·ªØ li·ªáu c·ªßa b·∫°n.</p>
        </section>
      </div>
    </div>
  </div>
);

// 404 Not Found Page Component
const NotFoundPage = () => (
  <div className="error-page">
    <div className="error-page__content">
      <h1 className="error-page__title">404</h1>
      <h2 className="error-page__subtitle">Trang kh√¥ng t·ªìn t·∫°i</h2>
      <p className="error-page__description">
        Trang b·∫°n t√¨m ki·∫øm kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ ƒë∆∞·ª£c di chuy·ªÉn.
      </p>
      <div className="error-page__actions">
        <Link to="/" className="btn btn--primary">V·ªÅ trang ch·ªß</Link>
        <Link to="/browse" className="btn btn--outline">Kh√°m ph√°</Link>
      </div>
    </div>
  </div>
);

export default App;