// client/src/components/study-sets/StudySetFilters.jsx
import React from 'react';

const StudySetFilters = ({ 
  filters, 
  onFiltersChange, 
  categoryStats = [], 
  privacyStats = [],
  isLoading = false 
}) => {
  const sortOptions = [
    { value: 'createdAt-desc', label: 'M·ªõi nh·∫•t' },
    { value: 'createdAt-asc', label: 'C≈© nh·∫•t' },
    { value: 'title-asc', label: 'T√™n A-Z' },
    { value: 'title-desc', label: 'T√™n Z-A' },
    { value: 'cardCount-desc', label: 'Nhi·ªÅu th·∫ª nh·∫•t' },
    { value: 'cardCount-asc', label: '√çt th·∫ª nh·∫•t' },
    { value: 'updatedAt-desc', label: 'S·ª≠a g·∫ßn ƒë√¢y' }
  ];

  const categoryOptions = [
    { value: '', label: 'T·∫•t c·∫£ danh m·ª•c' },
    { value: 'language', label: 'üåç Ng√¥n ng·ªØ' },
    { value: 'science', label: 'üî¨ Khoa h·ªçc' },
    { value: 'history', label: 'üìú L·ªãch s·ª≠' },
    { value: 'math', label: 'üìê To√°n h·ªçc' },
    { value: 'other', label: 'üìö Kh√°c' }
  ];

  const privacyOptions = [
    { value: '', label: 'T·∫•t c·∫£' },
    { value: 'public', label: 'üåê C√¥ng khai' },
    { value: 'private', label: 'üîí Ri√™ng t∆∞' }
  ];

  const handleSortChange = (value) => {
    const [sortBy, sortOrder] = value.split('-');
    onFiltersChange({ ...filters, sortBy, sortOrder, page: 1 });
  };

  const handleSearchChange = (e) => {
    const search = e.target.value;
    onFiltersChange({ ...filters, search, page: 1 });
  };

  const handleCategoryChange = (e) => {
    const category = e.target.value;
    onFiltersChange({ ...filters, category, page: 1 });
  };

  const handlePrivacyChange = (e) => {
    const privacy = e.target.value;
    onFiltersChange({ ...filters, privacy, page: 1 });
  };

  const clearFilters = () => {
    onFiltersChange({
      page: 1,
      limit: filters.limit,
      sortBy: 'createdAt',
      sortOrder: 'desc',
      search: '',
      category: '',
      privacy: ''
    });
  };

  const hasActiveFilters = filters.search || filters.category || filters.privacy;

  return (
    <div className="study-set-filters">
      <div className="study-set-filters__row">
        {/* Search */}
        <div className="study-set-filters__search">
          <input
            type="text"
            placeholder="T√¨m ki·∫øm h·ªçc ph·∫ßn..."
            value={filters.search}
            onChange={handleSearchChange}
            className="study-set-filters__search-input"
            disabled={isLoading}
          />
          <span className="study-set-filters__search-icon">üîç</span>
        </div>

        {/* Sort */}
        <div className="study-set-filters__sort">
          <label className="study-set-filters__label">S·∫Øp x·∫øp:</label>
          <select
            value={`${filters.sortBy}-${filters.sortOrder}`}
            onChange={(e) => handleSortChange(e.target.value)}
            className="study-set-filters__select"
            disabled={isLoading}
          >
            {sortOptions.map(option => (
              <option key={option.value} value={option.value}>
                {option.label}
              </option>
            ))}
          </select>
        </div>
      </div>

      <div className="study-set-filters__row">
        {/* Category Filter */}
        <div className="study-set-filters__filter">
          <label className="study-set-filters__label">Danh m·ª•c:</label>
          <select
            value={filters.category}
            onChange={handleCategoryChange}
            className="study-set-filters__select"
            disabled={isLoading}
          >
            {categoryOptions.map(option => {
              const stat = categoryStats.find(s => s._id === option.value);
              const count = stat ? ` (${stat.count})` : '';
              return (
                <option key={option.value} value={option.value}>
                  {option.label}{count}
                </option>
              );
            })}
          </select>
        </div>

        {/* Privacy Filter */}
        <div className="study-set-filters__filter">
          <label className="study-set-filters__label">Quy·ªÅn ri√™ng t∆∞:</label>
          <select
            value={filters.privacy}
            onChange={handlePrivacyChange}
            className="study-set-filters__select"
            disabled={isLoading}
          >
            {privacyOptions.map(option => {
              const stat = privacyStats.find(s => s._id === option.value);
              const count = stat ? ` (${stat.count})` : '';
              return (
                <option key={option.value} value={option.value}>
                  {option.label}{count}
                </option>
              );
            })}
          </select>
        </div>

        {/* Clear Filters */}
        {hasActiveFilters && (
          <button
            onClick={clearFilters}
            className="study-set-filters__clear"
            disabled={isLoading}
          >
            X√≥a b·ªô l·ªçc
          </button>
        )}
      </div>
    </div>
  );
};

export default StudySetFilters;